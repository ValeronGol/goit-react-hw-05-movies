{"version":3,"sources":["components/FilmReviews/FilmReviews.jsx"],"names":["FilmReviews","movieId","useState","reviews","setRevievs","useEffect","getReviews","then","res","data","results","length","map","review","author","content","id"],"mappings":"0NAIe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,YAAWL,GAASM,MAAK,SAAAC,GACvBJ,EAAWI,EAAIC,KAAKC,cAErB,CAACT,IAGF,mCACGE,EAAQQ,OAAS,EAChB,6BACGR,EAAQS,KAAI,SAAAC,GACX,OACE,+BACE,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,YAFJF,EAAOG,SAQtB","file":"static/js/FilmReviews.7c4be88d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getReviews } from 'services/apiMovie';\n\nexport default function FilmReviews({ movieId }) {\n  const [reviews, setRevievs] = useState([]);\n\n  useEffect(() => {\n    getReviews(movieId).then(res => {\n      setRevievs(res.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n\nFilmReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}