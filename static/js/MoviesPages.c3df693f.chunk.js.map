{"version":3,"sources":["services/apiMovie.js","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx"],"names":["axios","defaults","baseURL","key","getTrendingMovie","a","get","trending","getSearchMovie","query","movie","getMovieById","Id","movieById","getCastById","id","credits","getReviews","reviews","StyledLink","styled","Link","StyledUl","ul","StyledLi","li","FilmList","content","path","location","useLocation","map","contentEl","to","pathname","state","from","original_title","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchInput","input","StyledForm","form","StyledBtn","button","Searchbar","onSubmit","useState","searchValue","setSearchValue","e","preventDefault","trim","onChange","currentTarget","type","autoComplete","autoFocus","placeholder","MoviesPages","history","useHistory","searchParam","URLSearchParams","search","setSearch","films","setFilms","url","useRouteMatch","useEffect","then","res","data","results"],"mappings":"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","file":"static/js/MoviesPages.c3df693f.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst key = '60be8fb8c8a1f350ed6abbd466e696ed';\n\nexport const getTrendingMovie = async () => {\n  const trending = await axios.get(`/trending/movie/week?api_key=${key}`);\n  return trending;\n};\n\nexport const getSearchMovie = async query => {\n  const movie = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n  return movie;\n};\n\nexport const getMovieById = async Id => {\n  const movieById = await axios.get(\n    `/movie/${Id}?api_key=${key}&language=en-US`,\n  );\n  return movieById;\n};\n\nexport const getCastById = async id => {\n  const credits = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`,\n  );\n  return credits;\n};\n\nexport const getReviews = async id => {\n  const reviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`,\n  );\n  return reviews;\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  text-decoration: none;\n  cursor: pointer;\n  color: #071806;\n  &:hover,\n  &:focus {\n    color: #267a26;\n    background-color: #44034de6;\n    padding: 5px;\n    border-radius: 5px;\n    font-weight: 700;\n  }\n`;\n\nexport const StyledUl = styled.ul`\n  list-style-type: circle;\n`;\n\nexport const StyledLi = styled.li`\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, StyledUl, StyledLi } from './FilmList.styled';\n\nexport default function FilmList({ content, path }) {\n  const location = useLocation();\n  return (\n    <StyledUl>\n      {content.map(contentEl => {\n        return (\n          <StyledLi key={contentEl.id}>\n            <StyledLink\n              to={{\n                pathname: `${path}/${contentEl.id}`,\n                state: { from: location },\n              }}\n            >\n              {contentEl.original_title}\n            </StyledLink>\n          </StyledLi>\n        );\n      })}\n    </StyledUl>\n  );\n}\n\nFilmList.propTypes = {\n  content: PropTypes.array.isRequired,\n  path: PropTypes.string.isRequired,\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import styled from '@emotion/styled';\n\nexport const SearchInput = styled.input`\n  width: 300px;\n  font: inherit;\n  font-size: 16px;\n  border: 2px solid #267a26;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  margin-right: 10px;\n  border-radius: 5px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  margin-top: 20px;\n`;\nexport const StyledBtn = styled.button`\n  margin: 20px;\n  color: #312f30;\n  background-color: #267a26;\n  font-weight: 700;\n  font-size: 14px;\n  border-radius: 5px;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #363738;\n    color: #abdaab;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchInput, StyledForm, StyledBtn } from './Searchbar.styled';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchValue, setSearchValue] = useState('');\n\n  const onSearchChange = e => {\n    setSearchValue(e.currentTarget.value);\n  };\n\n  const searchFilm = e => {\n    e.preventDefault();\n    if (searchValue.trim() === '') {\n      return;\n    } else {\n      onSubmit(searchValue);\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={searchFilm}>\n      <SearchInput\n        onChange={onSearchChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        value={searchValue}\n        autoFocus\n        placeholder=\"Search film\"\n      />\n      <StyledBtn type=\"submit\">Search</StyledBtn>\n    </StyledForm>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport { getSearchMovie } from 'services/apiMovie';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport FilmList from 'components/FilmList/FilmList';\n\nexport default function MoviesPages() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const searchParam = new URLSearchParams(location.search).get('query') ?? '';\n\n  const [search, setSearch] = useState(searchParam);\n  const [films, setFilms] = useState([]);\n\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    getSearchMovie(search).then(res => {\n      setFilms(res.data.results);\n    });\n  }, [search]);\n\n  const onSearchClick = query => {\n    setSearch(query);\n    history.push({ ...location, search: `query=${query}` });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSearchClick} />\n      <FilmList content={films} path={`${url}`} />\n    </>\n  );\n}\n"],"sourceRoot":""}